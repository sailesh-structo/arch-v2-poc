---
version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=S3cret
      - POSTGRES_USER=my_user
      - POSTGRES_DB=my_db

  connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    hostname: connect
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: true
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECTOR_PLUGINS: /usr/share/java
      CONNECTOR_CLASSPATH: /usr/share/java
    volumes:
      - ./connect/configs/output-topic-sink.properties:/etc/kafka-connect/output-topic-sink.properties
      - ./connect/jars/kafka-connect-jdbc-10.7.4.jar:/usr/share/java/kafka-connect-jdbc/jars/kafka-connect-jdbc-10.7.4.jar
      - ./connect/jars/postgresql-42.4.3.jar:/usr/share/java/kafka-connect-jdbc/jars/postgresql-42.4.3.jar

  core:
    build:
      context: ../core
    container_name: core
    environment:
      KAFKA_BROKER_LIST: kafka:29092
    volumes:
      - uploads:/uploads

  backend:
    build:
      context: ../backend
    container_name: backend
    ports:
      - "4000:4000"
    environment:
      KAFKA_BROKER_LIST: kafka:29092
      DB_CONNECTION_STRING: postgres://my_user:S3cret@postgres:5432/my_db
      UPLOAD_FILE_PATH: /uploads
    volumes:
      - uploads:/uploads

  frontend:
    build:
      context: ../frontend
    container_name: frontend
    environment:
      VITE_BACKEND_URL: localhost:4000
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  uploads:
